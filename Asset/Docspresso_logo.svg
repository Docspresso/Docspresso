<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="800"
   height="800"
   viewBox="0 0 800 800"
   fill="none"
   version="1.1"
   id="svg6"
   sodipodi:docname="Docspresso_logo.svg"
   inkscape:version="1.4 (e7c3feb100, 2024-10-09)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.04375"
     inkscape:cx="340.11976"
     inkscape:cy="346.34731"
     inkscape:window-width="2510"
     inkscape:window-height="1018"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg6" />
  <g
     clip-path="url(#clip0_12_120)"
     id="g4"
     transform="matrix(0.99041916,0,0,1,1.1305378,0)"
     style="stroke-width:1.00483">
    <g
       filter="url(#filter0_d_12_120)"
       id="g3"
       style="stroke-width:1.00483">
      <path
         d="m 242.456,100.449 c 1.412,-0.007 2.824,-0.013 4.279,-0.02 1.56,0.001 3.121,0.003 4.728,0.004 1.651,-0.005 3.302,-0.01 5.002,-0.015 5.568,-0.015 11.135,-0.018 16.703,-0.02 3.977,-0.008 7.955,-0.017 11.933,-0.026 10.835,-0.023 21.67,-0.034 32.506,-0.042 6.769,-0.004 13.537,-0.012 20.306,-0.02 18.748,-0.021 37.495,-0.038 56.242,-0.044 1.801,-0.001 1.801,-0.001 3.639,-0.001 1.203,-0.001 2.406,-0.001 3.646,-0.001 l 7.316,-0.003 c 1.21,0 2.419,0 3.666,-10e-4 19.572,-0.007 39.145,-0.037 58.717,-0.077 20.104,-0.041 40.207,-0.062 60.311,-0.064 11.283,-0.002 22.567,-0.012 33.85,-0.043 10.624,-0.028 21.247,-0.032 31.871,-0.017 3.892,0.001 7.785,-0.006 11.677,-0.023 5.33,-0.022 10.658,-0.012 15.988,0.006 1.526,-0.014 3.053,-0.028 4.626,-0.042 19.666,0.154 38.022,5.858 52.48,19.841 10.743,11.603 17.381,24.96 17.413,41.118 0.008,1.743 0.015,3.486 0.023,5.281 -0.001,2.867 -0.001,2.867 -0.001,5.792 0.006,2.033 0.012,4.066 0.018,6.161 0.016,5.644 0.023,11.289 0.028,16.934 0.006,6.087 0.022,12.173 0.037,18.26 0.033,14.697 0.05,29.395 0.064,44.092 0.008,6.919 0.017,13.839 0.025,20.759 0.029,22.998 0.053,45.995 0.065,68.993 0.003,5.966 0.006,11.932 0.01,17.898 0,1.483 10e-4,2.966 0.002,4.494 0.014,24.041 0.056,48.081 0.11,72.122 0.055,24.676 0.085,49.352 0.091,74.028 0.003,13.858 0.018,27.715 0.061,41.572 0.036,11.797 0.049,23.593 0.033,35.39 -0.008,6.02 -0.004,12.039 0.028,18.059 0.029,6.523 0.018,13.045 -0.004,19.568 0.027,2.861 0.027,2.861 0.055,5.78 -0.098,11.991 -0.104,12.749 -3.346,18.362 -0.463,0.801 -1.046,1.534 -1.758,2.126 -3.849,3.201 -6.662,3.856 -11.658,4.26 -0.549,0.044 -1.105,0.04 -1.649,-0.048 -4.366,-0.703 -6.926,-2.974 -9.907,-6.179 -0.591,-0.636 -1.092,-1.357 -1.424,-2.159 -1.459,-3.53 -1.328,-6.081 -1.316,-10.3 10e-4,-2.561 10e-4,-2.561 0.002,-5.174 0.01,-1.89 0.019,-3.78 0.029,-5.727 0.003,-1.997 0.006,-3.994 0.01,-6.052 0.01,-5.56 0.028,-11.121 0.049,-16.681 0.021,-5.991 0.032,-11.982 0.045,-17.973 0.021,-10.388 0.049,-20.777 0.079,-31.166 0.047,-16.425 0.074,-32.85 0.099,-49.275 0.008,-5.618 0.017,-11.236 0.026,-16.854 0.002,-1.405 0.004,-2.809 0.006,-4.255 0.025,-15.994 0.052,-31.987 0.082,-47.981 0.002,-1.462 0.005,-2.925 0.008,-4.431 0.044,-23.68 0.107,-47.36 0.175,-71.04 0.07,-24.31 0.114,-48.62 0.136,-72.93 0.014,-14.994 0.049,-29.987 0.111,-44.981 0.04,-10.284 0.056,-20.566 0.053,-30.85 -10e-4,-5.93 0.009,-11.86 0.049,-17.79 0.036,-6.437 0.032,-12.874 0.018,-19.311 0.031,-2.795 0.031,-2.795 0.062,-5.646 -0.086,-12.177 -1.837,-22.793 -9.23,-32.478 -0.354,-0.464 -0.762,-0.888 -1.219,-1.251 -9.677,-7.678 -23.826,-7.703 -35.489,-7.636 -1.6,-0.012 -3.201,-0.023 -4.849,-0.035 -5.316,-0.032 -10.631,-0.028 -15.947,-0.023 -3.828,-0.016 -7.657,-0.034 -11.486,-0.053 -10.361,-0.048 -20.723,-0.064 -31.084,-0.074 -10.841,-0.016 -21.681,-0.062 -32.522,-0.104 -18.185,-0.066 -36.369,-0.115 -54.554,-0.15 -18.723,-0.037 -37.447,-0.084 -56.17,-0.145 -1.156,-0.004 -2.311,-0.008 -3.502,-0.011 -5.798,-0.02 -11.597,-0.039 -17.395,-0.058 -47.01,-0.157 -94.021,-0.278 -141.031,-0.377 -1.698,-0.003 -3.069,1.385 -3.044,3.083 v 0 c 0.148,10.677 0.248,21.354 0.321,32.032 0.033,3.977 0.079,7.953 0.137,11.93 0.081,5.739 0.119,11.478 0.148,17.218 0.034,1.758 0.069,3.515 0.104,5.326 0.005,16.858 -4.501,30.421 -15.763,42.812 -9.412,8.547 -22.126,15.543 -34.801,15.472 h -4.751 c -1.671,-0.018 -3.342,-0.036 -5.063,-0.054 -1.727,-0.005 -3.454,-0.01 -5.234,-0.015 -5.502,-0.019 -11.004,-0.063 -16.507,-0.107 -3.736,-0.017 -7.472,-0.033 -11.209,-0.047 -6.124,-0.025 -12.248,-0.059 -18.372,-0.101 -4.998,-0.034 -9.07,4.005 -9.071,9.002 -0.009,47.026 0.034,94.051 0.136,141.077 0.01,4.627 0.019,9.254 0.029,13.881 0.002,1.15 0.004,2.3 0.007,3.485 0.037,18.606 0.039,37.211 0.028,55.817 -0.01,19.1 0.018,38.2 0.079,57.3 0.034,10.725 0.05,21.449 0.024,32.173 -0.024,10.098 -0.001,20.195 0.057,30.293 0.014,3.703 0.01,7.405 -0.012,11.107 -0.914,23.301 -0.938,23.904 8.019,43.212 0.481,1.039 1.157,1.996 2.021,2.747 9.061,7.878 17.631,8.402 29.537,8.388 2.017,0.008 2.017,0.008 4.076,0.016 4.513,0.015 9.026,0.017 13.539,0.02 3.234,0.008 6.467,0.016 9.701,0.026 8.789,0.022 17.578,0.033 26.367,0.041 5.49,0.005 10.981,0.012 16.472,0.02 17.177,0.023 34.355,0.04 51.533,0.047 19.831,0.008 39.663,0.038 59.494,0.088 15.328,0.037 30.657,0.054 45.985,0.057 9.155,10e-4 18.311,0.012 27.466,0.042 8.613,0.029 17.225,0.032 25.837,0.017 3.159,-10e-4 6.318,0.007 9.477,0.024 4.317,0.021 8.633,0.011 12.95,-0.007 1.245,0.014 2.491,0.028 3.774,0.042 9.422,-0.091 17.206,-1.985 24.443,-8.266 0.407,-0.353 0.773,-0.754 1.101,-1.182 0.614,-0.799 1.231,-1.602 1.863,-2.425 0.804,-1.013 1.607,-2.025 2.435,-3.069 4.394,-6.705 3.837,-13.621 3.808,-21.374 10e-4,-1.362 0.003,-2.724 0.004,-4.128 0.003,-4.579 -0.006,-9.158 -0.015,-13.737 -0.001,-3.276 0,-6.553 10e-4,-9.83 0,-8.909 -0.01,-17.818 -0.021,-26.727 -0.011,-9.305 -0.012,-18.61 -0.014,-27.915 -0.005,-17.628 -0.019,-35.255 -0.035,-52.882 -0.019,-20.065 -0.028,-40.13 -0.037,-60.195 -0.016,-39.457 -0.044,-78.914 -0.079,-118.37 -0.003,-3.363 -1.852,-6.689 -5.178,-7.183 -2.126,-0.315 -4.273,-0.224 -6.977,-0.222 -1.87,-0.002 -3.74,-0.004 -5.667,-0.007 -3.091,0.01 -3.091,0.01 -6.245,0.019 -2.163,0 -4.326,0 -6.554,-0.001 -5.941,0 -11.881,0.01 -17.821,0.022 -6.205,0.011 -12.409,0.012 -18.614,0.014 -11.753,0.005 -23.507,0.019 -35.26,0.037 -15.879,0.022 -31.759,0.032 -47.638,0.042 -22.055,0.014 -44.11,0.042 -66.165,0.07 -4.936,0.007 -8.946,3.987 -8.988,8.923 -0.499,57.751 -0.999,115.577 -1.511,174.915 -0.044,5.02 4.036,9.107 9.056,9.079 41.318,-0.224 44.354,-0.246 91.35,-0.571 9.712,-0.031 9.712,-0.031 14.257,-0.037 3.178,-0.01 6.356,-0.035 9.534,-0.07 4.81,-0.05 9.619,-0.057 14.43,-0.054 1.419,-0.025 2.837,-0.05 4.299,-0.076 8.257,0.061 9.323,0.069 12.258,2.619 0.974,0.846 1.739,1.917 2.172,3.133 1.713,4.799 2.109,9.626 1.152,14.657 -0.143,0.748 -0.413,1.468 -0.766,2.143 -1.499,2.868 -1.986,3.584 -4.35,5.881 -1.161,1.129 -2.616,1.927 -4.215,2.184 -4.853,0.78 -9.682,0.639 -14.648,0.561 -2.603,0.01 -2.603,0.01 -5.259,0.021 -5.738,0.011 -11.475,-0.039 -17.214,-0.091 -3.981,-0.007 -7.962,-0.011 -11.943,-0.012 -8.344,-0.011 -16.686,-0.05 -25.029,-0.111 -10.714,-0.078 -21.427,-0.104 -32.141,-0.11 -8.219,-0.008 -16.438,-0.034 -24.658,-0.067 -3.951,-0.015 -7.903,-0.027 -11.855,-0.035 -5.511,-0.015 -11.022,-0.054 -16.534,-0.099 -1.645,-0.002 -3.29,-0.003 -4.986,-0.004 -2.243,-0.026 -2.243,-0.026 -4.532,-0.052 -1.955,-0.012 -1.955,-0.012 -3.95,-0.024 -2.256,-0.318 -2.91,-0.411 -4.294,-1.672 -1.502,-1.369 -2.351,-3.321 -2.506,-5.346 -0.13,-1.71 -0.131,-2.909 -0.134,-6.62 -0.009,-2.073 -0.019,-4.145 -0.028,-6.281 0.006,-2.309 0.013,-4.618 0.02,-6.927 -0.004,-2.422 -0.01,-4.844 -0.018,-7.266 -0.015,-6.589 -0.009,-13.177 0.002,-19.766 0.008,-6.884 0,-13.769 -0.005,-20.654 -0.006,-11.563 0.002,-23.127 0.018,-34.69 0.018,-13.382 0.012,-26.763 -0.006,-40.145 -0.015,-11.475 -0.018,-22.951 -0.009,-34.426 0.005,-6.86 0.006,-13.719 -0.005,-20.579 -0.01,-6.448 -0.003,-12.896 0.016,-19.344 0.005,-2.372 0.004,-4.743 -0.004,-7.114 -0.009,-3.227 0.004,-6.455 0.019,-9.682 10e-4,-1.81 0.003,-3.619 0.004,-5.483 0.287,-2.919 0.378,-3.839 1.478,-5.236 1.341,-1.703 3.463,-2.597 5.624,-2.749 2.056,-0.145 3.384,-0.143 7.81,-0.136 1.16,-0.003 2.32,-0.006 3.515,-0.009 3.906,-0.006 7.811,0.013 11.717,0.032 2.792,0.001 5.584,0 8.376,-0.002 7.597,-10e-4 15.194,0.02 22.791,0.044 7.933,0.021 15.866,0.023 23.799,0.027 15.03,0.011 30.06,0.039 45.089,0.074 17.108,0.038 34.216,0.057 51.324,0.075 33.322,0.034 66.644,0.09 99.966,0.161 3.444,0.007 6.725,1.976 7.268,5.378 0.628,3.929 0.283,8.018 0.285,12.144 0.008,1.471 0.015,2.943 0.023,4.459 0.022,4.961 0.032,9.921 0.042,14.882 0.014,3.545 0.027,7.091 0.042,10.636 0.043,11.676 0.069,23.351 0.093,35.026 l 0.027,12.059 c 0.036,16.728 0.067,33.457 0.086,50.185 0.027,23.962 0.082,47.924 0.177,71.885 0.065,16.851 0.097,33.702 0.106,50.553 0.006,10.06 0.026,20.12 0.08,30.18 0.05,9.479 0.061,18.957 0.041,28.436 0,3.466 0.013,6.932 0.043,10.398 0.21,26.23 -1.813,47.074 -20.465,66.768 -13.09,12.147 -25.974,16.187 -43.298,16.162 -1.41,0.012 -2.819,0.023 -4.271,0.035 -4.701,0.034 -9.401,0.043 -14.102,0.052 -3.38,0.019 -6.759,0.039 -10.139,0.061 -9.168,0.052 -18.336,0.082 -27.505,0.103 -5.735,0.014 -11.471,0.032 -17.206,0.05 -17.968,0.057 -35.935,0.098 -53.902,0.119 -20.7,0.024 -41.398,0.1 -62.098,0.22 -16.026,0.089 -32.052,0.132 -48.079,0.14 -9.559,0.006 -19.118,0.031 -28.677,0.105 -9.002,0.069 -18.002,0.08 -27.003,0.047 -3.289,-0.002 -6.577,0.016 -9.865,0.057 -21.78,0.255 -40.589,-1.241 -57.025,-17.818 -9.469,-11.296 -19.239,-26.982 -19.355,-42.337 -0.014,-1.427 -0.029,-2.854 -0.044,-4.324 -0.008,-1.568 -0.015,-3.135 -0.023,-4.75 -0.015,-1.665 -0.029,-3.331 -0.044,-5.047 -0.046,-5.606 -0.079,-11.212 -0.113,-16.818 -0.029,-4.01 -0.059,-8.019 -0.09,-12.029 -0.265,-36.623 -0.406,-73.248 -0.516,-109.872 -0.015,-4.902 -0.031,-9.804 -0.046,-14.706 -0.004,-1.218 -0.008,-2.437 -0.012,-3.692 -0.065,-19.718 -0.199,-39.434 -0.36,-59.151 -0.165,-20.257 -0.259,-40.513 -0.288,-60.77 -0.02,-11.369 -0.07,-22.735 -0.197,-34.103 -0.118,-10.702 -0.149,-21.402 -0.115,-32.105 -0.002,-3.92 -0.036,-7.841 -0.104,-11.761 -0.5357,-32.709 -0.5357,-32.709 8.638,-43.044 15.21193,-12.74058 27.72537,-28.19006 41.526,-42.384 2.774,-2.858 5.54,-5.726 8.304,-8.594 14.743,-15.246 14.743,-15.246 21.946,-21.572 10.586,-9.341 20.152,-19.869 29.932,-30.089 4.054,-4.236 8.113,-8.466 12.176,-12.692 0.925,-0.971 1.851,-1.942 2.804,-2.942 5.837,-6.072 8.687,-8.913 16.942,-8.927 z"
         fill="#f8f8f8"
         id="path2"
         sodipodi:nodetypes="cccccccccccccscccccccccccccccscccccscccccccccccccccccccccccccccccccccccccccccsscccccccccccccscccccccccccccscscccccccccccccccccccscccccccccccccccccccccccsccccccccccccccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
         style="stroke-width:1.00483" />
      <path
         d="m 364.168,382.746 c 1.819,-0.016 3.637,-0.033 5.511,-0.05 1.964,0.002 3.928,0.004 5.951,0.005 2.016,-0.007 4.032,-0.015 6.109,-0.022 4.266,-0.01 8.531,-0.011 12.796,-0.003 6.541,0.005 13.081,-0.035 19.622,-0.079 4.139,-0.004 8.278,-0.005 12.417,-0.004 1.964,-0.015 3.927,-0.031 5.951,-0.048 1.819,0.011 3.638,0.022 5.512,0.033 1.602,-10e-4 3.205,-0.002 4.856,-0.003 4.048,0.644 4.048,0.644 7.059,2.97 2.995,4.28 2.712,7.858 2.719,13.072 0.032,1.792 0.064,3.584 0.097,5.431 -1.036,6.282 -2.731,7.96 -7.494,11.905 -4.237,0.875 -4.237,0.875 -9.067,0.892 -1.813,0.021 -3.627,0.043 -5.495,0.065 -1.95,-0.014 -3.9,-0.028 -5.909,-0.042 -3.015,0.01 -3.015,0.01 -6.09,0.02 -4.248,0.005 -8.496,-0.008 -12.745,-0.037 -6.508,-0.037 -13.014,0 -19.522,0.044 -4.126,-0.005 -8.252,-0.013 -12.378,-0.027 -2.925,0.021 -2.925,0.021 -5.909,0.042 -1.814,-0.021 -3.627,-0.043 -5.495,-0.065 -2.391,-0.009 -2.391,-0.009 -4.83,-0.017 -5.532,-1.142 -7.522,-3.169 -10.905,-7.766 -0.769,-8.353 -0.711,-14.916 3.334,-22.397 5.571,-3.839 7.399,-3.887 13.905,-3.919 z"
         fill="#f3f3f3"
         id="path3"
         style="stroke-width:1.00483" />
    </g>
  </g>
  <defs
     id="defs6">
    <linearGradient
       id="swatch12">
      <stop
         style="stop-color:#485774;stop-opacity:1;"
         offset="0"
         id="stop13" />
    </linearGradient>
    <filter
       id="filter0_d_12_120"
       x="85"
       y="93"
       width="666"
       height="666"
       filterUnits="userSpaceOnUse"
       color-interpolation-filters="sRGB">
      <feFlood
         flood-opacity="0"
         result="BackgroundImageFix"
         id="feFlood4" />
      <feColorMatrix
         in="SourceAlpha"
         type="matrix"
         values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
         result="hardAlpha"
         id="feColorMatrix4" />
      <feOffset
         dx="18"
         dy="26"
         id="feOffset4" />
      <feGaussianBlur
         stdDeviation="16.5"
         id="feGaussianBlur4" />
      <feComposite
         in2="hardAlpha"
         operator="out"
         id="feComposite4" />
      <feColorMatrix
         type="matrix"
         values="0 0 0 0 0.133781 0 0 0 0 0.140753 0 0 0 0 0.182582 0 0 0 0.84 0"
         id="feColorMatrix5" />
      <feBlend
         mode="normal"
         in2="BackgroundImageFix"
         result="effect1_dropShadow_12_120"
         id="feBlend5" />
      <feBlend
         mode="normal"
         in="SourceGraphic"
         in2="effect1_dropShadow_12_120"
         result="shape"
         id="feBlend6" />
    </filter>
    <clipPath
       id="clip0_12_120">
      <rect
         width="800"
         height="800"
         rx="200"
         fill="#ffffff"
         id="rect6"
         x="0"
         y="0" />
    </clipPath>
    <meshgradient
       id="meshgradient31"
       gradientUnits="userSpaceOnUse"
       x="-72.953087"
       y="-65.777374">
      <meshrow
         id="meshrow31">
        <meshpatch
           id="meshpatch31">
          <stop
             path="c 320.485,0  640.969,0  961.454,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop31" />
          <stop
             path="c 0,307.728  0,615.455  0,923.183"
             style="stop-color:#27344e;stop-opacity:1"
             id="stop32" />
          <stop
             path="c -320.485,0  -640.969,0  -961.454,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop33" />
          <stop
             path="c 0,-307.728  0,-615.455  0,-923.183"
             style="stop-color:#27344e;stop-opacity:1"
             id="stop34" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
